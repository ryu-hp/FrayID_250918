@use "sass:math";

//ブレイクポイント
$breakpoints: (
  md: 768,
  lg: 960,
);
//メディアクエリー
$mediaquerys: (
  md: "screen and (min-width: #{map-get($breakpoints,'md')}px)",
  lg: "screen and (min-width: #{map-get($breakpoints,'lg')}px)",
);


// @include mq(){}で書くとブレークポイントが反映される（初期値はmd）
@mixin mq($mediaquery: md) {
  @media #{map-get($mediaquerys, $mediaquery)} {
    @content;
  }
}
// remへの計算式（16pxを基準としている。10pxを基準とする場合は16を10に変更する）
@function rem($pixels) {
    @return math.div($pixels, 10) * 1rem;
}
@function strip-unit($number) {
    @if type-of($number) == "number" and not unitless($number) {
        @return math.div($number, $number * 0 + 1);
    }
    @return $number;
}

// @function vw($size) {
//   @return unquote("calc(#{$size} * (100vw / 750))");
// }
@function vwl($size) {
  @return unquote("calc(#{$size} * var(--formula))");
}




// $base-font-family:  "trade-gothic-next", sans-serif;
$base-font-family: "trade-gothic-next", sans-serif;
$condensed-font-family: "Trade Gothic Next LT Pro Condensed", "trade-gothic-next", sans-serif;
$second-font-family:  "vincente", serif ;
$yugothic-font-family: "yu-gothic-pr6n", sans-serif, sans-serif;

$bold : 700;
$normal : 400;
$light : 300;

$color-black:#232323;
$color-white:#fff;


$inner: 1000px;

$padding-pc: rem(25);
$padding-sp: rem(15);
